Traceback (most recent call last):
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\jupyter_core\utils\__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\kl\anaconda3\envs\fuck\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
import pandas as pd
import numpy as np

import os
import pandas as pd
import numpy as np

def check_phenotype_is_binary_or_continous(filedirec):
    # Read the processed quality controlled file for a phenotype
    df = pd.read_csv(filedirec+os.sep+filedirec+'_QC.fam',sep="\s+",header=None)
    column_values = df[5].unique()
 
    if len(set(column_values)) == 2:
        return "Binary"
    else:
        return "Continous"

    
#filedirec = sys.argv[1]

filedirec = "SampleData1"
#filedirec = "asthma_19"
#filedirec = "migraine_0"

# Read the GWAS file.
GWAS = filedirec + os.sep + filedirec+".gz"
df = pd.read_csv(GWAS,compression= "gzip",sep="\s+")

if "BETA" in df.columns.to_list():
    # For Continous Phenotype.
    df = df[['CHR', 'BP', 'SNP', 'A1', 'A2', 'N', 'SE', 'P', 'BETA', 'INFO', 'MAF']]

else:
    df["BETA"] = np.log(df["OR"])
    df = df[['CHR', 'BP', 'SNP', 'A1', 'A2', 'N', 'SE', 'P', 'BETA', 'INFO', 'MAF']]


df.to_csv(filedirec + os.sep +filedirec+".txt",sep="\t",index=False)
print(df.head().to_markdown())
print("Length of DataFrame!",len(df))

df_transformed = pd.DataFrame({
        'SNP': df['SNP'],
        'A1': df['A1'],
        'A2': df['A2'],
        'freq': df['MAF'],
        'b': df['BETA'],
        'se': df['SE'],
        'p': df['P'],
        'N': df['N']
})


# Save this file as it is being required by GCTA.
output_file = filedirec+os.sep+"SBayesR.ma"
df_transformed.to_csv(output_file,sep="\t",index=False)
print(df_transformed.head().to_markdown())
print("Length of DataFrame!",len(df_transformed))


 
 
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [1;32mIn[1], line 28[0m
[0;32m     23[0m [38;5;66;03m#filedirec = "asthma_19"[39;00m
[0;32m     24[0m [38;5;66;03m#filedirec = "migraine_0"[39;00m
[0;32m     25[0m 
[0;32m     26[0m [38;5;66;03m# Read the GWAS file.[39;00m
[0;32m     27[0m GWAS [38;5;241m=[39m filedirec [38;5;241m+[39m os[38;5;241m.[39msep [38;5;241m+[39m filedirec[38;5;241m+[39m[38;5;124m"[39m[38;5;124m.gz[39m[38;5;124m"[39m
[1;32m---> 28[0m df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_csv[49m[43m([49m[43mGWAS[49m[43m,[49m[43mcompression[49m[38;5;241;43m=[39;49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mgzip[39;49m[38;5;124;43m"[39;49m[43m,[49m[43msep[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m\[39;49m[38;5;124;43ms+[39;49m[38;5;124;43m"[39;49m[43m)[49m
[0;32m     30[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mBETA[39m[38;5;124m"[39m [38;5;129;01min[39;00m df[38;5;241m.[39mcolumns[38;5;241m.[39mto_list():
[0;32m     31[0m     [38;5;66;03m# For Continous Phenotype.[39;00m
[0;32m     32[0m     df [38;5;241m=[39m df[[[38;5;124m'[39m[38;5;124mCHR[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mBP[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSNP[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mA1[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mA2[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mN[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSE[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mP[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mBETA[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mINFO[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mMAF[39m[38;5;124m'[39m]]

File [1;32m~\anaconda3\envs\fuck\Lib\site-packages\pandas\io\parsers\readers.py:1026[0m, in [0;36mread_csv[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)[0m
[0;32m   1013[0m kwds_defaults [38;5;241m=[39m _refine_defaults_read(
[0;32m   1014[0m     dialect,
[0;32m   1015[0m     delimiter,
[1;32m   (...)[0m
[0;32m   1022[0m     dtype_backend[38;5;241m=[39mdtype_backend,
[0;32m   1023[0m )
[0;32m   1024[0m kwds[38;5;241m.[39mupdate(kwds_defaults)
[1;32m-> 1026[0m [38;5;28;01mreturn[39;00m [43m_read[49m[43m([49m[43mfilepath_or_buffer[49m[43m,[49m[43m [49m[43mkwds[49m[43m)[49m

File [1;32m~\anaconda3\envs\fuck\Lib\site-packages\pandas\io\parsers\readers.py:620[0m, in [0;36m_read[1;34m(filepath_or_buffer, kwds)[0m
[0;32m    617[0m _validate_names(kwds[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mnames[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m))
[0;32m    619[0m [38;5;66;03m# Create the parser.[39;00m
[1;32m--> 620[0m parser [38;5;241m=[39m [43mTextFileReader[49m[43m([49m[43mfilepath_or_buffer[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m
[0;32m    622[0m [38;5;28;01mif[39;00m chunksize [38;5;129;01mor[39;00m iterator:
[0;32m    623[0m     [38;5;28;01mreturn[39;00m parser

File [1;32m~\anaconda3\envs\fuck\Lib\site-packages\pandas\io\parsers\readers.py:1620[0m, in [0;36mTextFileReader.__init__[1;34m(self, f, engine, **kwds)[0m
[0;32m   1617[0m     [38;5;28mself[39m[38;5;241m.[39moptions[[38;5;124m"[39m[38;5;124mhas_index_names[39m[38;5;124m"[39m] [38;5;241m=[39m kwds[[38;5;124m"[39m[38;5;124mhas_index_names[39m[38;5;124m"[39m]
[0;32m   1619[0m [38;5;28mself[39m[38;5;241m.[39mhandles: IOHandles [38;5;241m|[39m [38;5;28;01mNone[39;00m [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m-> 1620[0m [38;5;28mself[39m[38;5;241m.[39m_engine [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_engine[49m[43m([49m[43mf[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mengine[49m[43m)[49m

File [1;32m~\anaconda3\envs\fuck\Lib\site-packages\pandas\io\parsers\readers.py:1880[0m, in [0;36mTextFileReader._make_engine[1;34m(self, f, engine)[0m
[0;32m   1878[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode:
[0;32m   1879[0m         mode [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m
[1;32m-> 1880[0m [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;241m=[39m [43mget_handle[49m[43m([49m
[0;32m   1881[0m [43m    [49m[43mf[49m[43m,[49m
[0;32m   1882[0m [43m    [49m[43mmode[49m[43m,[49m
[0;32m   1883[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moptions[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mencoding[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m,[49m
[0;32m   1884[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moptions[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mcompression[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m,[49m
[0;32m   1885[0m [43m    [49m[43mmemory_map[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moptions[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mmemory_map[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m[43m,[49m
[0;32m   1886[0m [43m    [49m[43mis_text[49m[38;5;241;43m=[39;49m[43mis_text[49m[43m,[49m
[0;32m   1887[0m [43m    [49m[43merrors[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moptions[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mencoding_errors[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mstrict[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m,[49m
[0;32m   1888[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moptions[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mstorage_options[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m,[49m
[0;32m   1889[0m [43m[49m[43m)[49m
[0;32m   1890[0m [38;5;28;01massert[39;00m [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[0;32m   1891[0m f [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhandles[38;5;241m.[39mhandle

File [1;32m~\anaconda3\envs\fuck\Lib\site-packages\pandas\io\common.py:765[0m, in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    761[0m [38;5;28;01mif[39;00m compression [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[0;32m    762[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(handle, [38;5;28mstr[39m):
[0;32m    763[0m         [38;5;66;03m# error: Incompatible types in assignment (expression has type[39;00m
[0;32m    764[0m         [38;5;66;03m# "GzipFile", variable has type "Union[str, BaseBuffer]")[39;00m
[1;32m--> 765[0m         handle [38;5;241m=[39m [43mgzip[49m[38;5;241;43m.[39;49m[43mGzipFile[49m[43m([49m[43m  [49m[38;5;66;43;03m# type: ignore[assignment][39;49;00m
[0;32m    766[0m [43m            [49m[43mfilename[49m[38;5;241;43m=[39;49m[43mhandle[49m[43m,[49m
[0;32m    767[0m [43m            [49m[43mmode[49m[38;5;241;43m=[39;49m[43mioargs[49m[38;5;241;43m.[39;49m[43mmode[49m[43m,[49m
[0;32m    768[0m [43m            [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mcompression_args[49m[43m,[49m
[0;32m    769[0m [43m        [49m[43m)[49m
[0;32m    770[0m     [38;5;28;01melse[39;00m:
[0;32m    771[0m         handle [38;5;241m=[39m gzip[38;5;241m.[39mGzipFile(
[0;32m    772[0m             [38;5;66;03m# No overload variant of "GzipFile" matches argument types[39;00m
[0;32m    773[0m             [38;5;66;03m# "Union[str, BaseBuffer]", "str", "Dict[str, Any]"[39;00m
[1;32m   (...)[0m
[0;32m    776[0m             [38;5;241m*[39m[38;5;241m*[39mcompression_args,
[0;32m    777[0m         )

File [1;32m~\anaconda3\envs\fuck\Lib\gzip.py:174[0m, in [0;36mGzipFile.__init__[1;34m(self, filename, mode, compresslevel, fileobj, mtime)[0m
[0;32m    172[0m     mode [38;5;241m+[39m[38;5;241m=[39m [38;5;124m'[39m[38;5;124mb[39m[38;5;124m'[39m
[0;32m    173[0m [38;5;28;01mif[39;00m fileobj [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m--> 174[0m     fileobj [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mmyfileobj [38;5;241m=[39m [43mbuiltins[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[43mmode[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m'[39;49m[43m)[49m
[0;32m    175[0m [38;5;28;01mif[39;00m filename [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    176[0m     filename [38;5;241m=[39m [38;5;28mgetattr[39m(fileobj, [38;5;124m'[39m[38;5;124mname[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m'[39m)

[1;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'SampleData1\\SampleData1.gz'

